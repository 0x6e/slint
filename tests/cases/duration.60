TestCase := Rectangle {
    property<duration> d1: 100ms;
    property<duration> d2: 3s;
    property<duration> d3: 1.5s;
    property<duration> d4: 30 * 1ms;
    property<duration> d5: 8ms + 3s;
    property<duration> d6: d1 - d2;
    property<duration> d7: -0.5s;
    property<duration> d8: -0.5s / 2;
    property<int> i1: d1 / 1ms;
    property<int> i2: d1 / 2ms;
}


/*
```cpp
TestCase instance;
assert(instance.get_d1() == 100);
assert(instance.get_d2() == 3000);
assert(instance.get_d3() == 1500);
assert(instance.get_d4() == 30);
assert(instance.get_d5() == 3008);
assert(instance.get_d6() == -2900);
assert(instance.get_d7() == -500);
assert(instance.get_d8() == -250);
assert(instance.get_i1() == 100);
assert(instance.get_i2() == 50);
```


```rust
let instance = TestCase::new();
let instance = instance.as_ref();
assert_eq!(instance.get_d1(), 100);
assert_eq!(instance.get_d2(), 3000);
assert_eq!(instance.get_d3(), 1500);
assert_eq!(instance.get_d4(), 30);
assert_eq!(instance.get_d5(), 3008);
assert_eq!(instance.get_d6(), -2900);
assert_eq!(instance.get_d7(), -500);
assert_eq!(instance.get_d8(), -250);
assert_eq!(instance.get_i1(), 100);
assert_eq!(instance.get_i2(), 50);
```

```js
var instance = new sixtyfps.TestCase({});
assert.equal(instance.d1, 100);
assert.equal(instance.d2, 3000);
assert.equal(instance.d3, 1500);
assert.equal(instance.d4, 30);
assert.equal(instance.d5, 3008);
assert.equal(instance.d6, -2900);
assert.equal(instance.d7, -500);
assert.equal(instance.d8, -250);
assert.equal(instance.i1, 100);
assert.equal(instance.i2, 50);
```
*/
