
TestCase := Rectangle {
    width: 100px;
    height: 100px;
    color: white;
    property<int> top_level: 42;

    property<bool> cond1;
    property<bool> cond2;
    property<bool> cond3;

    if (cond1) : TouchArea {
        width: parent.width;
        height: root.height;
        property<int> xx: root.top_level;
        clicked => {
            root.top_level += self.xx + 8;
        }
    }

    if (cond1 ? cond2 : cond3) : Rectangle {
        color: root.color;
    }
}




/*
```cpp
TestCase instance;

// condition is false
sixtyfps::testing::send_mouse_click(instance, 5., 5.);
assert(instance.get_top_level() == 42);

instance.set_cond1(true);
sixtyfps::testing::send_mouse_click(instance, 5., 5.);
assert(instance.get_top_level() == 92);

instance.set_cond1(false);
sixtyfps::testing::send_mouse_click(instance, 5., 5.);
assert(instance.get_top_level() == 92);
```


```rust
let instance = TestCase::new();
let instance = instance.as_ref();

sixtyfps::testing::send_mouse_click(instance, 5., 5.);
assert_eq!(instance.get_top_level(), 42);

instance.set_cond1(true);
sixtyfps::testing::send_mouse_click(instance, 5., 5.);
assert_eq!(instance.get_top_level(), 92);

instance.set_cond1(false);
sixtyfps::testing::send_mouse_click(instance, 5., 5.);
assert_eq!(instance.get_top_level(), 92);
```

```js
var instance = new sixtyfps.TestCase();
instance.send_mouse_click(5., 5.);
assert.equal(instance.top_level, 42);

instance.cond1 = true;
instance.send_mouse_click(5., 5.);
assert.equal(instance.top_level, 92);

instance.cond1 = false;
instance.send_mouse_click(5., 5.);
assert.equal(instance.top_level, 92);
```
*/

