/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2020 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2020 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */
// Test the maximum and minimum size within a grid layout

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    GridLayout {
        spacing: 1phx;
        Row {
            rect1 := Rectangle {
                color: red;
                minimum_width: 50phx;
                minimum_height: 20phx;
                maximum_height: 20phx;

            }
            rect2 := Rectangle {
                color: blue;
            }
        }

        Row {
            rect3 := Rectangle {
                color: green;
                maximum_width: 60phx;
            }
            rect4 := Rectangle {
                color: red;
            }
            rect5 := Rectangle {
                color: black;
                maximum_width: 100phx;
            }
        }
    }

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 0phx && rect1.width == 60phx && rect1.height == 20phx;
    property <bool> rect2_pos_ok: rect2.x == 61phx && rect2.y == 0phx && rect2.width == 138phx && rect2.height == 20phx;
    property <bool> rect3_pos_ok: rect3.x == 0phx && rect3.y == 21phx && rect3.width == 60phx && rect3.height == 279phx;
}

/*

```cpp
TestCase instance;
TestCase::compute_layout({&TestCase::component_type, &instance });
assert(instance.get_rect1_pos_ok());
assert(instance.get_rect2_pos_ok());
assert(instance.get_rect3_pos_ok());
```


```rust
let instance = TestCase::new();
let instance = instance.as_ref();
use sixtyfps::re_exports::Component;
instance.compute_layout();
assert!(instance.get_rect1_pos_ok());
assert!(instance.get_rect2_pos_ok());
assert!(instance.get_rect3_pos_ok());
```

// FIXME:: interpreter test

*/