
export Button := Rectangle {
    signal clicked;
    property<string> text;
    property<bool> pressed: touch_area.pressed;

    border_width: 2lx;
    border_radius: 10lx;
    border_color: black;

    Text {
        text: root.text;
        color: black;
        width: touch_area.width;
        height: touch_area.height;
        horizontal_alignment: align_center;
        vertical_alignment: align_center;
    }

    touch_area := TouchArea {
        x: root.border_radius;
        y: root.border_radius;
        width: root.width - root.border_radius;
        height: root.height - root.border_radius;
        clicked => { root.clicked() }
    }
}

export CheckBox := Rectangle {
    signal toggled;
    property <string> text;
    property <bool> checked;

    // the check box iteself
    indicator := Rectangle {
        height: root.height;
        width: root.height * 2;
        border_width: 2lx;
        border_radius: root.height / 2;
        border_color: black;
        color: root.checked ? #eee : #eee;
        animate x, color { duration: 200ms; }

        bubble := Rectangle {
            width: root.height - 8lx;
            height: bubble.width;
            border_radius: bubble.height / 2;
            y: 4lx;
            x: root.checked ? 4lx : indicator.width - bubble.width - 4lx;
            color: root.checked ? #aea : #eaa;
            animate x, color { duration: 200ms; easing: ease;}
        }
    }

    Text {
        x: indicator.width + 2lx;
        text: root.text;
        color: black;
    }

    touch_area := TouchArea {
        width: root.width;
        height: root.height;
        clicked => {
            root.checked = !root.checked;
            root.toggled();
        }
    }

}


SpinBoxButton := Rectangle {
    signal clicked;
    property<string> text;
    border_width: 2lx;
    border_radius: 10lx;
    border_color: black;
    color: touch.pressed ? #ddd : #eee;
    touch := TouchArea {
        width: parent.width;
        height: parent.height;
        clicked => { root.clicked(); }
    }
    Text {
        x: parent.width / 2 - 15lx + (touch.pressed ? 1lx : 0lx) ;
        y: parent.height / 2 - 15lx + (touch.pressed ? 1lx : 0lx);
        text: root.text;
        color: black;
    }
}

export SpinBox := Rectangle {
    signal toggled;
    property <string> text;
    property <bool> checked;
    property <int> value;
    color: white;

    SpinBoxButton {
        text: "-";
        clicked => { root.value -= 1; }
        width: parent.height;
        height: parent.height;
    }

    SpinBoxButton {
        width: parent.height;
        height: parent.height;
        x: parent.width - self.width;
        text: "+";
        clicked => { root.value += 1; }
    }

    Text {
        text: root.value;
        x: parent.height + 15lx;
        color: black;
    }


}
